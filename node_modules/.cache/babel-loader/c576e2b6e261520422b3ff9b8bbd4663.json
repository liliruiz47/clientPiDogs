{"ast":null,"code":"import axios from 'axios';\nexport const GET_DOGS = 'GET_DOGS';\nexport const GET_TEMPERAMENTS = 'GET_TEMPERAMENTS';\nexport const FILTER_BY_TEMPERAMENT = 'FILTER_BY_TEMPERAMENT';\nexport const SORT_BY_NAME = 'SORT_BY_NAME';\nexport const SORT_BY_WEIGHT = 'SORT_BY_WEIGHT';\nexport const FILTER_BY_ORIGIN = 'FILTER_BY_ORIGIN';\nexport const GET_DOGS_BY_NAME = 'GET_DOGS_BY_NAME';\nexport const DELETE_DETAILS = 'DELETE_DETAILS';\nexport const CLEAN_DOG = 'CLEAN_DOG';\nexport const CLEANER = 'CLEANER';\nexport const GET_DETAILS = 'GET_DETAILS';\nexport const POST_DOG = 'POST_DOG';\nexport const GET_TEMPERAMENTS_LIST = 'GET_TEMPERAMENTS_LIST';\nexport function getDogs() {\n  return async function (dispatch) {\n    var json = await axios.get('http://localhost:3001/dogs');\n    return dispatch({\n      type: 'GET_DOGS',\n      payload: json.data\n    });\n  };\n}\n\n/*export function getDogs(name) {\r\n    return async function (dispatch) {\r\n        try {\r\n            if (name) {\r\n                return axios.get('/dogs?name=' + name)\r\n                    .then(res => dispatch({ type: GET_DOGS, payload: res.data }))\r\n                    .catch(err => dispatch({ type: GET_DOGS, payload: err.data }))\r\n            }\r\n            let json = await axios.get('/dogs', {})\r\n            return dispatch({\r\n                type: GET_DOGS,\r\n                payload: json.data\r\n            })\r\n        } catch (err) {\r\n            var fail = axios.get('/dogs?name=' + name)\r\n                .then(res => res.data)\r\n            return dispatch({\r\n                type: SEARCH_FAIL,\r\n                payload: fail,\r\n                })\r\n            }\r\n        }\r\n    }*/\n\nexport function getDogsByName(name) {\n  return async function (dispatch) {\n    const {\n      data\n    } = await axios.get(`http://localhost:3001/dogs?name=${name}`);\n    return dispatch({\n      type: \"GET_DOGS_BY_NAME\",\n      payload: data\n    });\n  };\n}\nexport function getTemperaments() {\n  return async function (dispatch) {\n    let json = await axios.get('http://localhost:3001/temperament', {});\n    return dispatch({\n      type: 'GET_TEMPERAMENTS',\n      payload: json.data\n    });\n  };\n}\nexport function getTemperamentsList() {\n  return async function (dispatch) {\n    var json = await axios.get('http://localhost:3001/temperament');\n    var listOfTemperaments = json.data.map(el => el.name);\n    return dispatch({\n      type: 'GET_TEMPERAMENTS_LIST',\n      payload: listOfTemperaments\n    });\n  };\n}\nexport function filterDogsByTemperament(payload) {\n  return {\n    type: FILTER_BY_TEMPERAMENT,\n    payload\n  };\n}\nexport function sortByName(payload) {\n  return {\n    type: SORT_BY_NAME,\n    payload\n  };\n}\nexport function sortByWeight(payload) {\n  return {\n    type: SORT_BY_WEIGHT,\n    payload\n  };\n}\nexport function filterDogsByOrigin(payload) {\n  return {\n    type: FILTER_BY_ORIGIN,\n    payload\n  };\n}\nexport function getDetails(id) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(`http://localhost:3001/dogs/` + id);\n      return dispatch({\n        type: GET_DETAILS,\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function postDog(payload) {\n  return async function (dispatch) {\n    const response = await axios.post('http://localhost:3001/dogs', payload);\n    console.log(response);\n    return response;\n  };\n}\nexport function deleteDetails() {\n  return async function (dispatch) {\n    return dispatch({\n      type: DELETE_DETAILS\n    });\n  };\n}","map":{"version":3,"names":["axios","GET_DOGS","GET_TEMPERAMENTS","FILTER_BY_TEMPERAMENT","SORT_BY_NAME","SORT_BY_WEIGHT","FILTER_BY_ORIGIN","GET_DOGS_BY_NAME","DELETE_DETAILS","CLEAN_DOG","CLEANER","GET_DETAILS","POST_DOG","GET_TEMPERAMENTS_LIST","getDogs","dispatch","json","get","type","payload","data","getDogsByName","name","getTemperaments","getTemperamentsList","listOfTemperaments","map","el","filterDogsByTemperament","sortByName","sortByWeight","filterDogsByOrigin","getDetails","id","error","console","log","postDog","response","post","deleteDetails"],"sources":["C:/Users/lilia/OneDrive/Escritorio/PI-Dogs-main/client/src/Redux/actions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const GET_DOGS = 'GET_DOGS'\r\nexport const GET_TEMPERAMENTS = 'GET_TEMPERAMENTS'\r\nexport const FILTER_BY_TEMPERAMENT = 'FILTER_BY_TEMPERAMENT'\r\nexport const SORT_BY_NAME = 'SORT_BY_NAME'\r\nexport const SORT_BY_WEIGHT = 'SORT_BY_WEIGHT'\r\nexport const FILTER_BY_ORIGIN = 'FILTER_BY_ORIGIN'\r\nexport const GET_DOGS_BY_NAME = 'GET_DOGS_BY_NAME'\r\nexport const DELETE_DETAILS = 'DELETE_DETAILS'\r\nexport const CLEAN_DOG = 'CLEAN_DOG'\r\nexport const CLEANER = 'CLEANER'\r\nexport const GET_DETAILS = 'GET_DETAILS'\r\nexport const POST_DOG = 'POST_DOG'\r\nexport const GET_TEMPERAMENTS_LIST = 'GET_TEMPERAMENTS_LIST'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getDogs() {\r\n    return async function (dispatch) {\r\n        var json = await axios.get('http://localhost:3001/dogs')\r\n        return dispatch({\r\n            type: 'GET_DOGS',\r\n            payload: json.data\r\n        })\r\n    }\r\n}\r\n\r\n/*export function getDogs(name) {\r\n    return async function (dispatch) {\r\n        try {\r\n            if (name) {\r\n                return axios.get('/dogs?name=' + name)\r\n                    .then(res => dispatch({ type: GET_DOGS, payload: res.data }))\r\n                    .catch(err => dispatch({ type: GET_DOGS, payload: err.data }))\r\n            }\r\n            let json = await axios.get('/dogs', {})\r\n            return dispatch({\r\n                type: GET_DOGS,\r\n                payload: json.data\r\n            })\r\n        } catch (err) {\r\n            var fail = axios.get('/dogs?name=' + name)\r\n                .then(res => res.data)\r\n            return dispatch({\r\n                type: SEARCH_FAIL,\r\n                payload: fail,\r\n                })\r\n            }\r\n        }\r\n    }*/\r\n\r\n    export function getDogsByName(name) {\r\n        return async function (dispatch) {\r\n            const { data } = await axios.get(`http://localhost:3001/dogs?name=${name}`);\r\n            return dispatch({\r\n                type: \"GET_DOGS_BY_NAME\",\r\n                payload: data\r\n            });\r\n        };\r\n    }\r\n    \r\n\r\nexport function getTemperaments() {\r\n    return async function (dispatch) {\r\n        let json = await axios.get('http://localhost:3001/temperament', {})\r\n        return dispatch({\r\n            type: 'GET_TEMPERAMENTS',\r\n            payload: json.data\r\n        })\r\n    }\r\n}\r\n\r\nexport function getTemperamentsList() {\r\n    return async function (dispatch) {\r\n        var json = await axios.get('http://localhost:3001/temperament');\r\n        var listOfTemperaments = json.data.map(el => el.name)\r\n        return dispatch({\r\n            type: 'GET_TEMPERAMENTS_LIST',\r\n            payload: listOfTemperaments\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport function filterDogsByTemperament(payload) {\r\n    return {\r\n        type: FILTER_BY_TEMPERAMENT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function sortByName(payload) {\r\n    return {\r\n        type: SORT_BY_NAME,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function sortByWeight(payload) {\r\n    return {\r\n        type: SORT_BY_WEIGHT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function filterDogsByOrigin(payload) {\r\n    return {\r\n        type: FILTER_BY_ORIGIN,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport function getDetails(id) {\r\n    return async function (dispatch) {\r\n        try {\r\n            var json = await axios.get(`http://localhost:3001/dogs/` + id);\r\n            return dispatch({\r\n                type: GET_DETAILS,\r\n                payload: json.data\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function postDog(payload) {\r\n    return async function (dispatch) {\r\n        const response = await axios.post('http://localhost:3001/dogs', payload)\r\n        console.log(response)\r\n        return response;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deleteDetails() {\r\n    return async function (dispatch){\r\n    return dispatch({\r\n        type: DELETE_DETAILS\r\n    })\r\n}\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}